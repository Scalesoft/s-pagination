{"version":3,"sources":["webpack://Pagination/webpack/universalModuleDefinition","webpack://Pagination/./src/pagination.ts"],"names":["root","factory","exports","module","define","amd","self","make","itemsCount","itemsOnPage","defaultPageNumber","Number","this","pageCount","Math","ceil","paginationContainer","empty","$innerContainer","$","document","createElement","addClass","options","showSlider","append","createSlider","createPageList","showInput","createPageInput","updateCurrentPage","callPageClickCallbackOnInit","goToPage","pageNumber","pageClickUrl","url","createPageClickUrl","window","location","href","getPageCount","getCurrentPage","currentPage","newPageNumber","callPageClickCallback","sliderElJq","updateVisiblePageElements","goToPageInput","val","sliderDiv","slider","sliderTipDiv","text","pageClickCallback","paginationUl","createPageElement","label","pageLi","classList","add","pageLink","$pageLink","html","attr","click","onPageClick","bind","hrefUrl","appendChild","createDotsPageElement","element","contentElement","innerHTML","recreatePageElements","createAndAppendPageElement","createPageNumber","toString","$paginationUl","isEnhanced","enhancedMode","nextPage","previousPageLi","nextPageLi","maxVisibleElements","i","centerCount","sideCount","centerLeftPage","centerRightPage","showDotsLeft","showDotsRight","isRightEnhancement","floor","inputGroupDiv","inputGroupButtonSpan","goToPageButton","goToPageIcon","keypress","onGoToInputKeyPress","onGoToPageButtonClick","inputTitle","showSliderTip","tooltip","stop","show","hideSliderTip","fadeOut","sliderContainer","tooltipArrow","tooltipInner","min","max","change","onSliderChange","start","slide","event","ui","value","hide","hover","mouseout","pageValue","target","data","preventDefault","pageNumberData","keyCode","replace","usePaginationDots","container","enhancementCorrection"],"mappings":"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","file":"pagination.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Pagination\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pagination\"] = factory();\n\telse\n\t\troot[\"Pagination\"] = factory();\n})(self, function() {\nreturn ","export default class Pagination {\r\n    private options: Pagination.Options;\r\n    private paginationContainer: JQuery;\r\n    private maxVisibleElements: number;\r\n    private pageCount: number;\r\n    private currentPage: number;\r\n    private usePaginationDots = false;\r\n    private paginationUl: HTMLUListElement;\r\n    private goToPageInput: HTMLInputElement;\r\n    private sliderDiv: HTMLDivElement;\r\n    private sliderTipDiv: HTMLDivElement;\r\n\r\n    constructor(options: Pagination.Options) {\r\n        this.options = options;\r\n        this.paginationContainer = $(options.container);\r\n\r\n        this.maxVisibleElements = 13;\r\n        if (options.maxVisibleElements) {\r\n            this.maxVisibleElements = options.maxVisibleElements;\r\n            if (this.maxVisibleElements % 2 === 0) {\r\n                this.maxVisibleElements--;\r\n            }\r\n\r\n            const enhancementCorrection = this.options.enhancedMode ? 4 : 0;\r\n            if (this.maxVisibleElements - enhancementCorrection < 7) {\r\n                this.maxVisibleElements = 7 + enhancementCorrection;\r\n            }\r\n        }\r\n    }\r\n\r\n    public make(itemsCount: number, itemsOnPage: number, defaultPageNumber: number = 1) {\r\n        defaultPageNumber = Number(defaultPageNumber);\r\n        if (!defaultPageNumber) {\r\n            defaultPageNumber = 1;\r\n        }\r\n\r\n        this.pageCount = Math.ceil(itemsCount / itemsOnPage);\r\n\r\n        this.paginationContainer.empty();\r\n\r\n        const $innerContainer = $(document.createElement(\"div\"));\r\n        $innerContainer.addClass(\"pagination-container\");\r\n\r\n        if (this.options.showSlider) {\r\n            $innerContainer.append(this.createSlider());\r\n        }\r\n        $innerContainer.append(this.createPageList());\r\n        if (this.options.showInput) {\r\n            $innerContainer.append(this.createPageInput());\r\n        }\r\n\r\n        this.paginationContainer.append($innerContainer);\r\n\r\n        this.updateCurrentPage(defaultPageNumber, this.options.callPageClickCallbackOnInit);\r\n    }\r\n\r\n    public goToPage(pageNumber: number) {\r\n        if (pageNumber < 1) {\r\n            pageNumber = 1;\r\n        } else if (pageNumber > this.pageCount) {\r\n            pageNumber = this.pageCount;\r\n        }\r\n\r\n        this.updateCurrentPage(pageNumber, true);\r\n\r\n        if (this.options.pageClickUrl) {\r\n            const url = this.createPageClickUrl(pageNumber);\r\n            window.location.href = url;\r\n        }\r\n    }\r\n\r\n    public getPageCount(): number {\r\n        return this.pageCount;\r\n    }\r\n\r\n    public getCurrentPage(): number {\r\n        return this.currentPage;\r\n    }\r\n\r\n    private updateCurrentPage(newPageNumber: number, callPageClickCallback: boolean) {\r\n        this.currentPage = newPageNumber;\r\n        this.updateVisiblePageElements();\r\n\r\n        if (this.options.showInput && this.goToPageInput) {\r\n            $(this.goToPageInput).val(newPageNumber);\r\n        }\r\n\r\n        if (this.options.showSlider && this.sliderDiv) {\r\n            const sliderElJq = $(this.sliderDiv);\r\n            if (sliderElJq.slider) {\r\n                sliderElJq.slider(\"value\", newPageNumber);\r\n            }\r\n        }\r\n\r\n        $(this.sliderTipDiv).text(newPageNumber);\r\n\r\n        if (callPageClickCallback && this.options.pageClickCallback) {\r\n            this.options.pageClickCallback(newPageNumber);\r\n        }\r\n    }\r\n\r\n    private createPageList(): HTMLUListElement {\r\n        const paginationUl = document.createElement(\"ul\");\r\n        $(paginationUl)\r\n            .addClass(\"pagination\")\r\n            .addClass(\"pagination-sm\");\r\n\r\n        this.paginationUl = paginationUl;\r\n        return paginationUl;\r\n    }\r\n\r\n    private createPageElement(label: string, pageNumber: any): HTMLLIElement {\r\n        const pageLi = document.createElement(\"li\");\r\n        pageLi.classList.add(\"page-item\");\r\n        const pageLink = document.createElement(\"a\");\r\n        pageLink.classList.add(\"page-link\");\r\n        const $pageLink = $(pageLink);\r\n        $pageLink\r\n            .html(label)\r\n            .attr(\"data-page-number\", pageNumber)\r\n            .click(this.onPageClick.bind(this));\r\n\r\n        const pageClickUrl = this.options.pageClickUrl;\r\n        const hrefUrl = pageClickUrl ? this.createPageClickUrl(pageNumber) : \"#\";\r\n        $pageLink.attr(\"href\", hrefUrl);\r\n\r\n        pageLi.appendChild(pageLink);\r\n        return pageLi;\r\n    }\r\n\r\n    private createDotsPageElement(): HTMLLIElement {\r\n        const element = document.createElement(\"li\");\r\n        $(element)\r\n            .addClass(\"disabled\")\r\n            .addClass(\"three-dots\");\r\n\r\n        const contentElement = document.createElement(\"span\");\r\n        contentElement.innerHTML = \"&hellip;\";\r\n\r\n        element.appendChild(contentElement);\r\n        return element;\r\n    }\r\n\r\n    private recreatePageElements(pageNumber: number) {\r\n        const $paginationUl = $(this.paginationUl);\r\n        const pageCount = this.pageCount;\r\n        const isEnhanced = this.options.enhancedMode;\r\n        const previousPage = pageNumber > 2 ? pageNumber - 1 : 1;\r\n        const nextPage = pageNumber < pageCount ? pageNumber + 1 : pageCount;\r\n        const previousPageLi = this.createPageElement(\"&laquo;\", previousPage);\r\n        const nextPageLi = this.createPageElement(\"&raquo;\", nextPage);\r\n        const createAndAppendPageElement = (createPageNumber: number) => {\r\n            const pageLi = this.createPageElement(createPageNumber.toString(), createPageNumber);\r\n            if (createPageNumber === pageNumber) {\r\n                pageLi.classList.add(\"active\");\r\n            }\r\n            $paginationUl.append(pageLi);\r\n        };\r\n\r\n        $paginationUl.empty();\r\n\r\n        if (pageCount <= this.maxVisibleElements - 2) {\r\n            $paginationUl.append(previousPageLi);\r\n            for (let i = 1; i <= pageCount; i++) {\r\n                createAndAppendPageElement(i);\r\n            }\r\n            $paginationUl.append(nextPageLi);\r\n            return;\r\n        }\r\n\r\n        const centerCount = this.maxVisibleElements - 6;\r\n        const sideCount = (centerCount - 1) / 2;\r\n        let centerLeftPage = pageNumber - sideCount;\r\n        let centerRightPage = pageNumber + sideCount;\r\n        const showDotsLeft = centerLeftPage - 1 > 1;\r\n        const showDotsRight = centerRightPage + 1 < pageCount;\r\n\r\n        if (centerLeftPage < 3) {\r\n            centerLeftPage = 2;\r\n            centerRightPage = centerLeftPage + centerCount;\r\n        }\r\n        if (centerRightPage > pageCount - 2) {\r\n            centerRightPage = pageCount - 1;\r\n            centerLeftPage = centerRightPage - centerCount;\r\n        }\r\n\r\n        $paginationUl.append(previousPageLi);\r\n        createAndAppendPageElement(1);\r\n\r\n        if (showDotsLeft) {\r\n            $paginationUl.append(this.createDotsPageElement());\r\n        }\r\n        let isRightEnhancement = false;\r\n        if (isEnhanced) {\r\n            if (centerLeftPage >= 5) {\r\n                createAndAppendPageElement(Math.ceil((centerLeftPage + 3) / 2));\r\n                $paginationUl.append(this.createDotsPageElement());\r\n                centerLeftPage += 2;\r\n            }\r\n            if (centerRightPage <= pageCount - 4) {\r\n                centerRightPage -= 2;\r\n                isRightEnhancement = true;\r\n            }\r\n        }\r\n        for (let i = centerLeftPage; i <= centerRightPage; i++) {\r\n            createAndAppendPageElement(i);\r\n        }\r\n        if (isRightEnhancement) {\r\n            $paginationUl.append(this.createDotsPageElement());\r\n            createAndAppendPageElement(Math.floor((centerRightPage + pageCount) / 2));\r\n        }\r\n        if (showDotsRight) {\r\n            $paginationUl.append(this.createDotsPageElement());\r\n        }\r\n\r\n        createAndAppendPageElement(pageCount);\r\n        $paginationUl.append(nextPageLi);\r\n    }\r\n\r\n    private updateVisiblePageElements() {\r\n        this.recreatePageElements(this.currentPage);\r\n    }\r\n\r\n    private createPageInput(): HTMLDivElement {\r\n        const inputGroupDiv = document.createElement(\"div\");\r\n        const inputGroupButtonSpan = document.createElement(\"span\");\r\n        const goToPageInput = document.createElement(\"input\");\r\n        const goToPageButton = document.createElement(\"button\");\r\n        const goToPageIcon = document.createElement(\"span\");\r\n\r\n        $(inputGroupDiv)\r\n            .addClass(\"input-group\")\r\n            .addClass(\"input-group-sm\")\r\n            .addClass(\"pagination-input\")\r\n            .append(goToPageInput)\r\n            .append(inputGroupButtonSpan);\r\n\r\n        $(goToPageInput)\r\n            .attr(\"type\", \"text\")\r\n            .addClass(\"form-control\")\r\n            .keypress(this.onGoToInputKeyPress.bind(this));\r\n\r\n        $(inputGroupButtonSpan)\r\n            .addClass(\"input-group-btn\")\r\n            .append(goToPageButton);\r\n\r\n        $(goToPageButton)\r\n            .attr(\"type\", \"button\")\r\n            .addClass(\"btn\")\r\n            .addClass(\"btn-default\")\r\n            .append(goToPageIcon)\r\n            .click(this.onGoToPageButtonClick.bind(this));\r\n\r\n        $(goToPageIcon)\r\n            .addClass(\"glyphicon\")\r\n            .addClass(\"glyphicon-arrow-right\");\r\n\r\n        if (this.options.inputTitle) {\r\n            $([goToPageInput, goToPageButton]).attr(\"title\", this.options.inputTitle);\r\n        }\r\n\r\n        this.goToPageInput = goToPageInput;\r\n        return inputGroupDiv;\r\n    }\r\n\r\n    private createSlider(): HTMLDivElement {\r\n        const sliderContainer = document.createElement(\"div\");\r\n        const slider = document.createElement(\"div\");\r\n\r\n        const tooltip = document.createElement(\"div\");\r\n        const tooltipArrow = document.createElement(\"div\");\r\n        const tooltipInner = document.createElement(\"div\");\r\n\r\n        const showSliderTip = () => {\r\n            $(tooltip).stop(true, true).show();\r\n        };\r\n        const hideSliderTip = () => {\r\n            $(tooltip).fadeOut(600);\r\n        };\r\n\r\n        $(sliderContainer)\r\n            .addClass(\"pagination-slider\")\r\n            .append(slider);\r\n\r\n        $(slider).slider({\r\n            min: 1,\r\n            max: this.pageCount,\r\n            change: this.onSliderChange.bind(this),\r\n            start: showSliderTip,\r\n            stop: hideSliderTip,\r\n            slide: (event, ui) => {\r\n                showSliderTip();\r\n                $(tooltipInner).text(ui.value);\r\n            },\r\n        });\r\n\r\n        $(tooltip)\r\n            .addClass(\"tooltip\")\r\n            .addClass(\"top\")\r\n            .addClass(\"pagination-tooltip\")\r\n            .append(tooltipArrow)\r\n            .append(tooltipInner)\r\n            .hide();\r\n\r\n        $(tooltipArrow).addClass(\"tooltip-arrow\");\r\n        $(tooltipInner).addClass(\"tooltip-inner\");\r\n\r\n        $(\".ui-slider-handle\", slider)\r\n            .addClass(\"pagination-slider-handle\")\r\n            .append(tooltip)\r\n            .hover(showSliderTip)\r\n            .mouseout(hideSliderTip);\r\n\r\n        this.sliderDiv = slider;\r\n        this.sliderTipDiv = tooltipInner;\r\n        return sliderContainer;\r\n    }\r\n\r\n    private onPageClick(event: JQueryEventObject) {\r\n        const pageValue = $(event.target).data(\"page-number\");\r\n        const pageNumber = Number(pageValue);\r\n\r\n        if (this.options.pageClickUrl) {\r\n            if (this.options.pageClickCallback) {\r\n                this.options.pageClickCallback(pageNumber);\r\n            }\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n        this.updateCurrentPage(pageNumber, true);\r\n    }\r\n\r\n    private onGoToPageButtonClick() {\r\n        const pageNumberData = $(this.goToPageInput).val();\r\n        const pageNumber = Number(pageNumberData);\r\n        this.goToPage(pageNumber);\r\n    }\r\n\r\n    private onGoToInputKeyPress(event: JQueryEventObject) {\r\n        if (event.keyCode === 13) {\r\n            this.onGoToPageButtonClick();\r\n        }\r\n    }\r\n\r\n    private onSliderChange(event: Event, ui: JQueryUI.SliderUIParams) {\r\n        if (ui.value !== this.currentPage) {\r\n            this.goToPage(ui.value);\r\n        }\r\n    }\r\n\r\n    private createPageClickUrl(pageNumber: number): string {\r\n        const pageClickUrl = this.options.pageClickUrl;\r\n        switch (typeof pageClickUrl) {\r\n            case \"function\":\r\n                return (pageClickUrl as (x) => string)(pageNumber);\r\n            case \"string\":\r\n                return (pageClickUrl as string).replace(\"{{page}}\", pageNumber.toString());\r\n            default:\r\n                return \"#\";\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}