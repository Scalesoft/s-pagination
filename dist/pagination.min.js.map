{"version":3,"file":"pagination.min.js","mappings":"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","sources":["webpack://Pagination/webpack/universalModuleDefinition","webpack://Pagination/./src/pagination.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Pagination\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pagination\"] = factory();\n\telse\n\t\troot[\"Pagination\"] = factory();\n})(self, function() {\nreturn ","export default class Pagination {\r\n    private options: Pagination.Options;\r\n    private paginationContainer: JQuery;\r\n    private maxVisibleElements: number;\r\n    private pageCount: number;\r\n    private currentPage: number;\r\n    private usePaginationDots = false;\r\n    private paginationUl: HTMLUListElement;\r\n    private goToPageInput: HTMLInputElement;\r\n    private sliderDiv: HTMLDivElement;\r\n    private sliderTipDiv: HTMLDivElement;\r\n\r\n    constructor(options: Pagination.Options) {\r\n        this.options = options;\r\n        this.paginationContainer = $(options.container);\r\n\r\n        this.maxVisibleElements = 13;\r\n        if (options.maxVisibleElements) {\r\n            this.maxVisibleElements = options.maxVisibleElements;\r\n            if (this.maxVisibleElements % 2 === 0) {\r\n                this.maxVisibleElements--;\r\n            }\r\n\r\n            const enhancementCorrection = this.options.enhancedMode ? 4 : 0;\r\n            if (this.maxVisibleElements - enhancementCorrection < 7) {\r\n                this.maxVisibleElements = 7 + enhancementCorrection;\r\n            }\r\n        }\r\n    }\r\n\r\n    public make(itemsCount: number, itemsOnPage: number, defaultPageNumber: number = 1) {\r\n        defaultPageNumber = Number(defaultPageNumber);\r\n        if (!defaultPageNumber) {\r\n            defaultPageNumber = 1;\r\n        }\r\n\r\n        this.pageCount = Math.ceil(itemsCount / itemsOnPage);\r\n\r\n        this.paginationContainer.empty();\r\n\r\n        const $innerContainer = $(document.createElement(\"div\"));\r\n        $innerContainer.addClass(\"pagination-container\");\r\n\r\n        if (this.options.showSlider) {\r\n            $innerContainer.append(this.createSlider());\r\n        }\r\n        $innerContainer.append(this.createPageList());\r\n        if (this.options.showInput) {\r\n            $innerContainer.append(this.createPageInput());\r\n        }\r\n\r\n        this.paginationContainer.append($innerContainer);\r\n\r\n        this.updateCurrentPage(defaultPageNumber, this.options.callPageClickCallbackOnInit);\r\n    }\r\n\r\n    public goToPage(pageNumber: number) {\r\n        if (pageNumber < 1) {\r\n            pageNumber = 1;\r\n        } else if (pageNumber > this.pageCount) {\r\n            pageNumber = this.pageCount;\r\n        }\r\n\r\n        this.updateCurrentPage(pageNumber, true);\r\n\r\n        if (this.options.pageClickUrl) {\r\n            const url = this.createPageClickUrl(pageNumber);\r\n            window.location.href = url;\r\n        }\r\n    }\r\n\r\n    public getPageCount(): number {\r\n        return this.pageCount;\r\n    }\r\n\r\n    public getCurrentPage(): number {\r\n        return this.currentPage;\r\n    }\r\n\r\n    private updateCurrentPage(newPageNumber: number, callPageClickCallback: boolean) {\r\n        this.currentPage = newPageNumber;\r\n        this.updateVisiblePageElements();\r\n\r\n        if (this.options.showInput && this.goToPageInput) {\r\n            $(this.goToPageInput).val(newPageNumber);\r\n        }\r\n\r\n        if (this.options.showSlider && this.sliderDiv) {\r\n            const sliderElJq = $(this.sliderDiv);\r\n            if (sliderElJq.slider) {\r\n                sliderElJq.slider(\"value\", newPageNumber);\r\n            }\r\n        }\r\n\r\n        $(this.sliderTipDiv).text(newPageNumber);\r\n\r\n        if (callPageClickCallback && this.options.pageClickCallback) {\r\n            this.options.pageClickCallback(newPageNumber);\r\n        }\r\n    }\r\n\r\n    private createPageList(): HTMLUListElement {\r\n        const paginationUl = document.createElement(\"ul\");\r\n        $(paginationUl)\r\n            .addClass(\"pagination\")\r\n            .addClass(\"pagination-sm\");\r\n\r\n        this.paginationUl = paginationUl;\r\n        return paginationUl;\r\n    }\r\n\r\n    private createPageElement(label: string, pageNumber: any): HTMLLIElement {\r\n        const pageLi = document.createElement(\"li\");\r\n        pageLi.classList.add(\"page-item\");\r\n        const pageLink = document.createElement(\"a\");\r\n        pageLink.classList.add(\"page-link\");\r\n        const $pageLink = $(pageLink);\r\n        $pageLink\r\n            .html(label)\r\n            .attr(\"data-page-number\", pageNumber)\r\n            .click(this.onPageClick.bind(this));\r\n\r\n        const pageClickUrl = this.options.pageClickUrl;\r\n        const hrefUrl = pageClickUrl ? this.createPageClickUrl(pageNumber) : \"#\";\r\n        $pageLink.attr(\"href\", hrefUrl);\r\n\r\n        pageLi.appendChild(pageLink);\r\n        return pageLi;\r\n    }\r\n\r\n    private createDotsPageElement(): HTMLLIElement {\r\n        const element = document.createElement(\"li\");\r\n        $(element)\r\n            .addClass(\"disabled\")\r\n            .addClass(\"three-dots\");\r\n\r\n        const contentElement = document.createElement(\"span\");\r\n        contentElement.innerHTML = \"&hellip;\";\r\n\r\n        element.appendChild(contentElement);\r\n        return element;\r\n    }\r\n\r\n    private recreatePageElements(pageNumber: number) {\r\n        const $paginationUl = $(this.paginationUl);\r\n        const pageCount = this.pageCount;\r\n        const isEnhanced = this.options.enhancedMode;\r\n        const previousPage = pageNumber > 2 ? pageNumber - 1 : 1;\r\n        const nextPage = pageNumber < pageCount ? pageNumber + 1 : pageCount;\r\n        const previousPageLi = this.createPageElement(\"&laquo;\", previousPage);\r\n        const nextPageLi = this.createPageElement(\"&raquo;\", nextPage);\r\n        const createAndAppendPageElement = (createPageNumber: number) => {\r\n            const pageLi = this.createPageElement(createPageNumber.toString(), createPageNumber);\r\n            if (createPageNumber === pageNumber) {\r\n                pageLi.classList.add(\"active\");\r\n            }\r\n            $paginationUl.append(pageLi);\r\n        };\r\n\r\n        $paginationUl.empty();\r\n\r\n        if (pageCount <= this.maxVisibleElements - 2) {\r\n            $paginationUl.append(previousPageLi);\r\n            for (let i = 1; i <= pageCount; i++) {\r\n                createAndAppendPageElement(i);\r\n            }\r\n            $paginationUl.append(nextPageLi);\r\n            return;\r\n        }\r\n\r\n        const centerCount = this.maxVisibleElements - 6;\r\n        const sideCount = (centerCount - 1) / 2;\r\n        let centerLeftPage = pageNumber - sideCount;\r\n        let centerRightPage = pageNumber + sideCount;\r\n        const showDotsLeft = centerLeftPage - 1 > 1;\r\n        const showDotsRight = centerRightPage + 1 < pageCount;\r\n\r\n        if (centerLeftPage < 3) {\r\n            centerLeftPage = 2;\r\n            centerRightPage = centerLeftPage + centerCount;\r\n        }\r\n        if (centerRightPage > pageCount - 2) {\r\n            centerRightPage = pageCount - 1;\r\n            centerLeftPage = centerRightPage - centerCount;\r\n        }\r\n\r\n        $paginationUl.append(previousPageLi);\r\n        createAndAppendPageElement(1);\r\n\r\n        if (showDotsLeft) {\r\n            $paginationUl.append(this.createDotsPageElement());\r\n        }\r\n        let isRightEnhancement = false;\r\n        if (isEnhanced) {\r\n            if (centerLeftPage >= 5) {\r\n                createAndAppendPageElement(Math.ceil((centerLeftPage + 3) / 2));\r\n                $paginationUl.append(this.createDotsPageElement());\r\n                centerLeftPage += 2;\r\n            }\r\n            if (centerRightPage <= pageCount - 4) {\r\n                centerRightPage -= 2;\r\n                isRightEnhancement = true;\r\n            }\r\n        }\r\n        for (let i = centerLeftPage; i <= centerRightPage; i++) {\r\n            createAndAppendPageElement(i);\r\n        }\r\n        if (isRightEnhancement) {\r\n            $paginationUl.append(this.createDotsPageElement());\r\n            createAndAppendPageElement(Math.floor((centerRightPage + pageCount) / 2));\r\n        }\r\n        if (showDotsRight) {\r\n            $paginationUl.append(this.createDotsPageElement());\r\n        }\r\n\r\n        createAndAppendPageElement(pageCount);\r\n        $paginationUl.append(nextPageLi);\r\n    }\r\n\r\n    private updateVisiblePageElements() {\r\n        this.recreatePageElements(this.currentPage);\r\n    }\r\n\r\n    private createPageInput(): HTMLDivElement {\r\n        const inputGroupDiv = document.createElement(\"div\");\r\n        const inputGroupButtonSpan = document.createElement(\"span\");\r\n        const goToPageInput = document.createElement(\"input\");\r\n        const goToPageButton = document.createElement(\"button\");\r\n        const goToPageIcon = document.createElement(\"span\");\r\n\r\n        $(inputGroupDiv)\r\n            .addClass(\"input-group\")\r\n            .addClass(\"input-group-sm\")\r\n            .addClass(\"pagination-input\")\r\n            .append(goToPageInput)\r\n            .append(inputGroupButtonSpan);\r\n\r\n        $(goToPageInput)\r\n            .attr(\"type\", \"text\")\r\n            .addClass(\"form-control\")\r\n            .keypress(this.onGoToInputKeyPress.bind(this));\r\n\r\n        $(inputGroupButtonSpan)\r\n            .addClass(\"input-group-btn\")\r\n            .append(goToPageButton);\r\n\r\n        $(goToPageButton)\r\n            .attr(\"type\", \"button\")\r\n            .addClass(\"btn\")\r\n            .addClass(\"btn-default\")\r\n            .append(goToPageIcon)\r\n            .click(this.onGoToPageButtonClick.bind(this));\r\n\r\n        $(goToPageIcon)\r\n            .addClass(\"glyphicon\")\r\n            .addClass(\"glyphicon-arrow-right\");\r\n\r\n        if (this.options.inputTitle) {\r\n            $([goToPageInput, goToPageButton]).attr(\"title\", this.options.inputTitle);\r\n        }\r\n\r\n        this.goToPageInput = goToPageInput;\r\n        return inputGroupDiv;\r\n    }\r\n\r\n    private createSlider(): HTMLDivElement {\r\n        const sliderContainer = document.createElement(\"div\");\r\n        const slider = document.createElement(\"div\");\r\n\r\n        const tooltip = document.createElement(\"div\");\r\n        const tooltipArrow = document.createElement(\"div\");\r\n        const tooltipInner = document.createElement(\"div\");\r\n\r\n        const showSliderTip = () => {\r\n            $(tooltip).stop(true, true).show();\r\n        };\r\n        const hideSliderTip = () => {\r\n            $(tooltip).fadeOut(600);\r\n        };\r\n\r\n        $(sliderContainer)\r\n            .addClass(\"pagination-slider\")\r\n            .append(slider);\r\n\r\n        $(slider).slider({\r\n            min: 1,\r\n            max: this.pageCount,\r\n            change: this.onSliderChange.bind(this),\r\n            start: showSliderTip,\r\n            stop: hideSliderTip,\r\n            slide: (event, ui) => {\r\n                showSliderTip();\r\n                $(tooltipInner).text(ui.value);\r\n            },\r\n        });\r\n\r\n        $(tooltip)\r\n            .addClass(\"tooltip\")\r\n            .addClass(\"top\")\r\n            .addClass(\"pagination-tooltip\")\r\n            .append(tooltipArrow)\r\n            .append(tooltipInner)\r\n            .hide();\r\n\r\n        $(tooltipArrow).addClass(\"tooltip-arrow\");\r\n        $(tooltipInner).addClass(\"tooltip-inner\");\r\n\r\n        $(\".ui-slider-handle\", slider)\r\n            .addClass(\"pagination-slider-handle\")\r\n            .append(tooltip)\r\n            .hover(showSliderTip)\r\n            .mouseout(hideSliderTip);\r\n\r\n        this.sliderDiv = slider;\r\n        this.sliderTipDiv = tooltipInner;\r\n        return sliderContainer;\r\n    }\r\n\r\n    private onPageClick(event: JQueryEventObject) {\r\n        const pageValue = $(event.target).data(\"page-number\");\r\n        const pageNumber = Number(pageValue);\r\n\r\n        if (this.options.pageClickUrl) {\r\n            if (this.options.pageClickCallback) {\r\n                this.options.pageClickCallback(pageNumber);\r\n            }\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n        this.updateCurrentPage(pageNumber, true);\r\n    }\r\n\r\n    private onGoToPageButtonClick() {\r\n        const pageNumberData = $(this.goToPageInput).val();\r\n        const pageNumber = Number(pageNumberData);\r\n        this.goToPage(pageNumber);\r\n    }\r\n\r\n    private onGoToInputKeyPress(event: JQueryEventObject) {\r\n        if (event.keyCode === 13) {\r\n            this.onGoToPageButtonClick();\r\n        }\r\n    }\r\n\r\n    private onSliderChange(event: Event, ui: JQueryUI.SliderUIParams) {\r\n        if (ui.value !== this.currentPage) {\r\n            this.goToPage(ui.value);\r\n        }\r\n    }\r\n\r\n    private createPageClickUrl(pageNumber: number): string {\r\n        const pageClickUrl = this.options.pageClickUrl;\r\n        switch (typeof pageClickUrl) {\r\n            case \"function\":\r\n                return (pageClickUrl as (x) => string)(pageNumber);\r\n            case \"string\":\r\n                return (pageClickUrl as string).replace(\"{{page}}\", pageNumber.toString());\r\n            default:\r\n                return \"#\";\r\n        }\r\n    }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","options","usePaginationDots","this","paginationContainer","$","container","maxVisibleElements","enhancementCorrection","enhancedMode","make","itemsCount","itemsOnPage","defaultPageNumber","Number","pageCount","Math","ceil","empty","$innerContainer","document","createElement","addClass","showSlider","append","createSlider","createPageList","showInput","createPageInput","updateCurrentPage","callPageClickCallbackOnInit","goToPage","pageNumber","pageClickUrl","url","createPageClickUrl","window","location","href","getPageCount","getCurrentPage","currentPage","newPageNumber","callPageClickCallback","updateVisiblePageElements","goToPageInput","val","sliderDiv","sliderElJq","slider","sliderTipDiv","text","pageClickCallback","paginationUl","createPageElement","label","pageLi","classList","add","pageLink","$pageLink","html","attr","click","onPageClick","bind","hrefUrl","appendChild","createDotsPageElement","element","contentElement","innerHTML","recreatePageElements","$paginationUl","isEnhanced","previousPage","nextPage","previousPageLi","nextPageLi","createAndAppendPageElement","createPageNumber","toString","i","centerCount","sideCount","centerLeftPage","centerRightPage","showDotsLeft","showDotsRight","isRightEnhancement","floor","inputGroupDiv","inputGroupButtonSpan","goToPageButton","goToPageIcon","keypress","onGoToInputKeyPress","onGoToPageButtonClick","inputTitle","sliderContainer","tooltip","tooltipArrow","tooltipInner","showSliderTip","stop","show","hideSliderTip","fadeOut","min","max","change","onSliderChange","start","slide","event","ui","value","hide","hover","mouseout","pageValue","target","data","preventDefault","pageNumberData","keyCode","replace"],"sourceRoot":""}